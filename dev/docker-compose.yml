services:
  database:
    image: postgres:13
    pull_policy: always
    ports:
      - "5432:5432"
    networks:
      - wapikit-dev
    environment:
      - POSTGRES_PASSWORD=wapikit-dev
      - POSTGRES_USER=wapikit-dev
      - POSTGRES_DB=wapikit-dev
    restart: unless-stopped
    volumes:
      - type: volume
        source: wapikit-dev-db
        target: /var/lib/postgresql/data

  redis:
    image: redis:6
    pull_policy: always
    ports:
      - "6379:6379"
    networks:
      - wapikit-dev
    restart: unless-stopped
    volumes:
      - type: volume
        source: wapikit-dev-redis
        target: /data

  frontend:
    build:
      context: ../
      dockerfile: dev/dev.Dockerfile
      no_cache: true
    command: [ "make", "dev-frontend" ]
    ports:
      - "3000:3000"
    environment:
      - WAPIKIT_API_URL=http://backend:8000
      - NODE_ENV=development
    depends_on:
      - database
      - redis
    volumes:
      - ../:/app
    networks:
      - wapikit-dev

  backend:
    build:
      context: ../
      dockerfile: dev/dev.Dockerfile
      no_cache: true
    command: ["/bin/sh", "-c", "atlas migrate apply --env global --var DB_URL=$$DB_URL && WAPIKIT_CONFIG=/app/config.toml make dev-backend-docker"]
    ports:
      - "8000:8000"
      - "8081:8081"
    depends_on:
      - database
      - redis
    environment:
      - WAPIKIT_FRONTEND_DIR=""
      - WAPIKIT_environment=development
      - WAPIKIT_debug=true
      - WAPIKIT_CONFIG=/app/config.toml
      - DB_URL=postgres://wapikit-dev:wapikit-dev@database:5432/wapikit-dev?sslmode=disable
    volumes:
      - ../:/app
      - ./config.toml:/app/config.toml:ro
      - ../internal/database/migrations:/app/migrations
    networks:
      - wapikit-dev

volumes:
  wapikit-dev-db:
    name: wapikit-dev-db

  wapikit-dev-redis:
    name: wapikit-dev-redis

networks:
  wapikit-dev:
    name: wapikit-dev-network